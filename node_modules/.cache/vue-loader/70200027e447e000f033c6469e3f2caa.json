{"remainingRequest":"/Users/maizuru2/workspace/umilog_APP/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maizuru2/workspace/umilog_APP/src/components/ AxiosTest.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/maizuru2/workspace/umilog_APP/src/components/ AxiosTest.vue","mtime":1694064005985},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/cache-loader/dist/cjs.js","mtime":1694055372826},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/babel-loader/lib/index.js","mtime":1694055372651},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/ts-loader/index.js","mtime":1694055375094},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/cache-loader/dist/cjs.js","mtime":1694055372826},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/vue-loader/lib/index.js","mtime":1694055375292}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEF4aW9zVGVzdCBleHRlbmRzIFZ1ZSB7CiAgLy/jgIDml6Xku5jjgpLmjIflrpoKICB0ZXh0OnN0cmluZz1uZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApOwoKCiAgYXN5bmMgZ2V0X2RhdGEoKXsKICAgICAgLy8gcG9zdOOBp+mAgeS/oeOBmeOCi+ODh+ODvOOCvwogICAgICBsZXQgcG9zdF9kYXRhPXsKICAgICAgICAgICJkYXRlIjp0aGlzLnRleHQsCiAgICAgIH07CgogICAgICAvL+awtOa3seOBlOOBqOOBruODh+ODvOOCv+OCkuaMgeOBo+OBpuOBj+OCi+OAggogICAgICAvLyAgcG9zdOOBp+ODh+ODvOOCv+OCkumAgeS/oQogICAgICBsZXQgZXh0cmFjdF9kYXRhOntba2V5Om51bWJlcl06QXJyYXk8YW55Pn0gPSBhd2FpdCBheGlvcy5wb3N0KCdodHRwczovLzhia2Q2NXZyYmouZXhlY3V0ZS1hcGkuYXAtbm9ydGhlYXN0LTEuYW1hem9uYXdzLmNvbS9kZXYnLHBvc3RfZGF0YSkKICAgICAgICAgIC50aGVuKChyZXNwb25zZSk9PnsKICAgICAgICAgICAgICAvLyDjg4fjg7zjgr/lj5blvpcKICAgICAgICAgICAgICBsZXQgcmVzcG9uc2VfZGF0YT1yZXNwb25zZS5kYXRhLmJvZHk7CiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2VfZGF0YSk7CiAgICAgICAgICAgICAgLy8gc29ydF9kYXRh6Zai5pWw44Gu5oi744KK5YCk77yI44K944O844OI44GV44KM44Gf44OH44O844K/77yJ44KS5Luj5YWlCiAgICAgICAgICAgICAgbGV0IHNvcnRfZGF0YT10aGlzLnNvcnRfZGF0YShyZXNwb25zZV9kYXRhKTsKICAgICAgICAgICAgICAvLyDjg4fjg7zjgr/jgpIx5pmC6ZaT44GU44Go44Gu6ZuG5ZCI44Gr5YiG44GR44KLCiAgICAgICAgICAgICAgbGV0IHNwbGl0X2RhdGE9dGhpcy5zcGxpdF9ob3VyKHNvcnRfZGF0YSk7CiAgICAgICAgICAgICAgLy8g44OH44O844K/44KS5rC05rex5q+O44Gr44Go44KLCiAgICAgICAgICAgICAgbGV0IGV4dHJhY3RfZGF0YTI9dGhpcy5leHRyYWN0X2RhdGEoc3BsaXRfZGF0YSk7CiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZXh0cmFjdF9kYXRhMik7CiAgICAgICAgICAgICAgLy81beOBquOBruOBp+OCpOODs+ODh+ODg+OCr+OCue+8lQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4dHJhY3RfZGF0YTJbNV0pOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4dHJhY3RfZGF0YTJbMTBdKTsKCiAgICAgICAgICAgICAgcmV0dXJuIGV4dHJhY3RfZGF0YTI7CiAgICAgICAgICB9KTsKICAgICAgICAgIHJldHVybiBleHRyYWN0X2RhdGEKICB9CgogIC8vIOODh+ODvOOCv+OCkuOCveODvOODiOOBmeOCi+OBn+OCgeOBrumWouaVsAogIHNvcnRfZGF0YShyZXNwb25zZV9kYXRhOmFueSl7CiAgICBsZXQgdGltZV9kYXRhOkFycmF5PHN0cmluZz49W10KICAgIGxldCBzb3J0X2RhdGE6YW55PVtdOwogICAgcmVzcG9uc2VfZGF0YS5mb3JFYWNoKChlbGVtZW50OiB7IHRpbWVzdGFtcDogc3RyaW5nOyB9KSA9PiB7CiAgICAgIHRpbWVfZGF0YS5wdXNoKGVsZW1lbnQudGltZXN0YW1wKTsKICAgIH0pOwogICAgdGltZV9kYXRhLnNvcnQoKTsKICAgIHRpbWVfZGF0YS5mb3JFYWNoKCh0aW1lKT0+ewogICAgICByZXNwb25zZV9kYXRhLmZvckVhY2goKGVsZW1lbnQ6IHsgdGltZXN0YW1wOiBzdHJpbmc7IH0pID0+IHsKICAgICAgICBpZiAodGltZT09ZWxlbWVudC50aW1lc3RhbXApewogICAgICAgICAgc29ydF9kYXRhLnB1c2goZWxlbWVudCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogICAgcmV0dXJuIHNvcnRfZGF0YQogIH0KCiAgLy8g44OH44O844K/44KS77yR5pmC6ZaT5q+O44Gu44Kw44Or44O844OX44Gr5YiG5YmyCiAgc3BsaXRfaG91cihzb3J0X2RhdGE6YW55KXsKICAgIGxldCBtYXA6e1trZXk6c3RyaW5nXTpBcnJheTxhbnk+fT17fTsKICAgICAgbGV0IGhvdXI9IiIKICAgICAgc29ydF9kYXRhLmZvckVhY2goKGVsZW1lbnQ6IHsgdGltZXN0YW1wOiBzdHJpbmc7IH0pID0+IHsKICAgICAgICBpZiAoaG91ciE9ZWxlbWVudC50aW1lc3RhbXAuc2xpY2UoMTEsMTMpKXsKICAgICAgICBtYXBbZWxlbWVudC50aW1lc3RhbXAuc2xpY2UoMTEsMTMpXT1bZWxlbWVudF07CiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICBsZXQgYXJyYXk9bWFwW2VsZW1lbnQudGltZXN0YW1wLnNsaWNlKDExLDEzKV0KICAgICAgICAgIGFycmF5LnB1c2goZWxlbWVudCk7CiAgICAgICAgICBtYXBbZWxlbWVudC50aW1lc3RhbXAuc2xpY2UoMTEsMTMpXT1hcnJheTsKICAgICAgICB9CiAgICAgICAgaG91cj1lbGVtZW50LnRpbWVzdGFtcC5zbGljZSgxMSwxMyk7CiAgICAgIH0pOwogICAgICByZXR1cm4gbWFwCiAgfQoKICAvLyDlkITmsLTmt7HjgavjgYrjgZHjgovjg4fjg7zjgr/jgavliIblibIKICBleHRyYWN0X2RhdGEoc3BsaXRfZGF0YTp7W2tleTpzdHJpbmddOkFycmF5PGFueT59KXsKICAgIGxldCBleHRyYWN0X2RhdGE6e1trZXk6bnVtYmVyXTpBcnJheTxhbnk+fT17fTsKICAgIGZvcihsZXQgaT0xOyBpPD0xMTsgaSsrKXsKICAgICAgZXh0cmFjdF9kYXRhW2ldPVtdCiAgICAgIGZvciAobGV0IGtleSBpbiBzcGxpdF9kYXRhKXsKICAgICAgICBsZXQgZGF0YTphbnk7CiAgICAgICAgbGV0IGRlZmZfYXJyYXk6QXJyYXk8bnVtYmVyPj1bXTsKICAgICAgICBzcGxpdF9kYXRhW2tleV0uZm9yRWFjaCgoZWxlbWVudDp7ZGVlcDpzdHJpbmd9KT0+ewogICAgICAgICAgaWYgKGVsZW1lbnQuZGVlcCE9Ik5vbmUiKXsKICAgICAgICAgICAgZGVmZl9hcnJheS5wdXNoKE1hdGguYWJzKE51bWJlcihlbGVtZW50LmRlZXApLWkpKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBsZXQgbWluPU1hdGgubWluKC4uLmRlZmZfYXJyYXkpOwogICAgICAgIGxldCBpbmRleD1kZWZmX2FycmF5LmluZGV4T2YobWluKTsKICAgICAgICBkYXRhPXNwbGl0X2RhdGFba2V5XVtpbmRleF07CiAgICAgICAgZXh0cmFjdF9kYXRhW2ldLnB1c2goZGF0YSk7CiAgICAgIH0KICAgIH0KICAgIGZvciAobGV0IGtleSBpbiBleHRyYWN0X2RhdGEpewogICAgICBleHRyYWN0X2RhdGFba2V5XT10aGlzLnNvcnRfZGF0YShleHRyYWN0X2RhdGFba2V5XSk7CiAgICB9CiAgICByZXR1cm4gZXh0cmFjdF9kYXRhOwogIH0KfQo="},{"version":3,"sources":[" AxiosTest.vue"],"names":[],"mappings":";AASA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":" AxiosTest.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <button @click=\"get_data()\">get data</button>\n      <!--- textに日付を入力　--->\n      <input type=\"text\" v-model=\"text\"/>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport axios from 'axios';\nimport Vue from 'vue';\n\nexport default class AxiosTest extends Vue {\n  //　日付を指定\n  text:string=new Date().toISOString().slice(0, 10);\n\n\n  async get_data(){\n      // postで送信するデータ\n      let post_data={\n          \"date\":this.text,\n      };\n\n      //水深ごとのデータを持ってくる。\n      //  postでデータを送信\n      let extract_data:{[key:number]:Array<any>} = await axios.post('https://8bkd65vrbj.execute-api.ap-northeast-1.amazonaws.com/dev',post_data)\n          .then((response)=>{\n              // データ取得\n              let response_data=response.data.body;\n              // console.log(response_data);\n              // sort_data関数の戻り値（ソートされたデータ）を代入\n              let sort_data=this.sort_data(response_data);\n              // データを1時間ごとの集合に分ける\n              let split_data=this.split_hour(sort_data);\n              // データを水深毎にとる\n              let extract_data2=this.extract_data(split_data);\n              // console.log(extract_data2);\n              //5mなのでインデックス５\n              console.log(extract_data2[5]);\n              console.log(extract_data2[10]);\n\n              return extract_data2;\n          });\n          return extract_data\n  }\n\n  // データをソートするための関数\n  sort_data(response_data:any){\n    let time_data:Array<string>=[]\n    let sort_data:any=[];\n    response_data.forEach((element: { timestamp: string; }) => {\n      time_data.push(element.timestamp);\n    });\n    time_data.sort();\n    time_data.forEach((time)=>{\n      response_data.forEach((element: { timestamp: string; }) => {\n        if (time==element.timestamp){\n          sort_data.push(element);\n        }\n      });\n    });\n    return sort_data\n  }\n\n  // データを１時間毎のグループに分割\n  split_hour(sort_data:any){\n    let map:{[key:string]:Array<any>}={};\n      let hour=\"\"\n      sort_data.forEach((element: { timestamp: string; }) => {\n        if (hour!=element.timestamp.slice(11,13)){\n        map[element.timestamp.slice(11,13)]=[element];\n        }\n        else{\n          let array=map[element.timestamp.slice(11,13)]\n          array.push(element);\n          map[element.timestamp.slice(11,13)]=array;\n        }\n        hour=element.timestamp.slice(11,13);\n      });\n      return map\n  }\n\n  // 各水深におけるデータに分割\n  extract_data(split_data:{[key:string]:Array<any>}){\n    let extract_data:{[key:number]:Array<any>}={};\n    for(let i=1; i<=11; i++){\n      extract_data[i]=[]\n      for (let key in split_data){\n        let data:any;\n        let deff_array:Array<number>=[];\n        split_data[key].forEach((element:{deep:string})=>{\n          if (element.deep!=\"None\"){\n            deff_array.push(Math.abs(Number(element.deep)-i));\n          }\n        });\n        let min=Math.min(...deff_array);\n        let index=deff_array.indexOf(min);\n        data=split_data[key][index];\n        extract_data[i].push(data);\n      }\n    }\n    for (let key in extract_data){\n      extract_data[key]=this.sort_data(extract_data[key]);\n    }\n    return extract_data;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\ndiv{\n  button{\n    width: 100px;\n    height: 50px;\n    border-radius: 10%;\n  }\n  input{\n    text-align: center;\n  }\n}\n\n</style>"]}]}