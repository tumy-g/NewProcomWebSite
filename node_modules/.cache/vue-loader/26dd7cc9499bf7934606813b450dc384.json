{"remainingRequest":"/Users/maizuru2/workspace/umilog_APP/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maizuru2/workspace/umilog_APP/src/components/ChartTest.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/maizuru2/workspace/umilog_APP/src/components/ChartTest.vue","mtime":1694055375476},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/cache-loader/dist/cjs.js","mtime":1694055372826},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/babel-loader/lib/index.js","mtime":1694055372651},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/ts-loader/index.js","mtime":1694055375094},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/cache-loader/dist/cjs.js","mtime":1694055372826},{"path":"/Users/maizuru2/workspace/umilog_APP/node_modules/vue-loader/lib/index.js","mtime":1694055375292}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IENoYXJ0IGZyb20gJ2NoYXJ0LmpzJzsKZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhcnRUZXN0IGV4dGVuZHMgVnVlewogICAgT3h5Z2VuOmFueTsKICAgIENobG9ybzphbnk7CiAgICBTYWxpbml0eTphbnk7CiAgICBXYXRlcl90ZW1wOmFueTsKICAgIFR1cmJpZGl0eTphbnk7CgogICAgcGxvdF9kYXRhKGV4dHJhY3RfZGF0YTp7W2tleTpudW1iZXJdOkFycmF5PGFueT59KXsKICAgICAgICBsZXQgY3R4MT08SFRNTENhbnZhc0VsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm94eWdlbiIpOwogICAgICAgIGxldCBkYXRhX2xlbmd0aD1leHRyYWN0X2RhdGFbMV0ubGVuZ3RoOwogICAgICAgIHRoaXMuT3h5Z2VuID0gbmV3IENoYXJ0KGN0eDEsewogICAgICAgICAgICB0eXBlOidsaW5lJywKICAgICAgICAgICAgZGF0YTp7CiAgICAgICAgICAgICAgICBsYWJlbHM6Wy4uLkFycmF5KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+aW5kZXgpLAogICAgICAgICAgICAgICAgZGF0YXNldHM6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8zLDYsOSwxMQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiM1ttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzNdW2luZGV4XS5veHlnZW4pOwogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDI1NSwwLDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiNlttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzZdW2luZGV4XS5veHlnZW4pOwogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDAsMCwyNTUsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiOVttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzldW2luZGV4XS5veHlnZW4pOwogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDAsMjU1LDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiMTFbbV0iLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOlsuLi5BcnJheTxudW1iZXI+KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXh0cmFjdF9kYXRh44Gv6YWN5YiX44Gn44Gq44GP44CB5pW05pWw44Kt44O877yI5rC05rex77yJ44Gu6YCj5oOz6YWN5YiXCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyKGV4dHJhY3RfZGF0YVsxMV1baW5kZXhdLm94eWdlbik7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMTAwLDEwMCwxMDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgb3B0aW9uczp7CiAgICAgICAgICAgICAgICB0aXRsZTp7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTp0cnVlLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IumFuOe0oOmHjyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VnZ2VzdGVkTWF4OiA4LAogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdWdnZXN0ZWRNaW46IDUsCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHN0ZXBTaXplOiAzLAogICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24odmFsdWUsIGluZGV4LCB2YWx1ZXMpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuICB2YWx1ZSArICAnbSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICB9KQogICAgICAgIGxldCBjdHgyPTxIVE1MQ2FudmFzRWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2hsb3JvIik7CiAgICAgICAgdGhpcy5DaGxvcm8gPSBuZXcgQ2hhcnQoY3R4MiwgewogICAgICAgICAgICB0eXBlOidsaW5lJywKICAgICAgICAgICAgZGF0YTp7CiAgICAgICAgICAgICAgICBsYWJlbHM6Wy4uLkFycmF5KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+aW5kZXgpLAogICAgICAgICAgICAgICAgZGF0YXNldHM6WwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IjNbbV0iLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOlsuLi5BcnJheTxudW1iZXI+KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXh0cmFjdF9kYXRh44Gv6YWN5YiX44Gn44Gq44GP44CB5pW05pWw44Kt44O877yI5rC05rex77yJ44Gu6YCj5oOz6YWN5YiXCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyKGV4dHJhY3RfZGF0YVszXVtpbmRleF0uY2hsb3JvcGh5bGwpOwogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDI1NSwwLDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiNlttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzZdW2luZGV4XS5jaGxvcm9waHlsbCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMCwwLDI1NSwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiI5W21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbOV1baW5kZXhdLmNobG9yb3BoeWxsKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAicmdiYSgwLDI1NSwwLDEpIiwKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAicmdiYSgwLDAsMCwwKSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IjExW21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbMTFdW2luZGV4XS5jaGxvcm9waHlsbCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMTAwLDEwMCwxMDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgb3B0aW9uczp7CiAgICAgICAgICAgICAgICB0aXRsZTp7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTp0cnVlLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IuOCr+ODreODreODleOCo+ODqyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VnZ2VzdGVkTWF4OiAyLAogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdWdnZXN0ZWRNaW46IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHN0ZXBTaXplOiAyLAogICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24odmFsdWUsIGluZGV4LCB2YWx1ZXMpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuICB2YWx1ZSArICAnbSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICBsZXQgY3R4Mz08SFRNTENhbnZhc0VsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNhbGluaXR5Iik7CiAgICAgICAgdGhpcy5TYWxpbml0eSA9IG5ldyBDaGFydChjdHgzLCB7CiAgICAgICAgICAgIHR5cGU6J2xpbmUnLAogICAgICAgICAgICBkYXRhOnsKICAgICAgICAgICAgICAgIGxhYmVsczpbLi4uQXJyYXkoZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT5pbmRleCksCiAgICAgICAgICAgICAgICBkYXRhc2V0czpbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiM1ttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzNdW2luZGV4XS5zYWxpbml0eSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMjU1LDAsMCwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiI2W21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbNl1baW5kZXhdLnNhbGluaXR5KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAicmdiYSgwLDAsMTU1LDEpIiwKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAicmdiYSgwLDAsMCwwKSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IjlbbV0iLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOlsuLi5BcnJheTxudW1iZXI+KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXh0cmFjdF9kYXRh44Gv6YWN5YiX44Gn44Gq44GP44CB5pW05pWw44Kt44O877yI5rC05rex77yJ44Gu6YCj5oOz6YWN5YiXCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyKGV4dHJhY3RfZGF0YVs5XVtpbmRleF0uc2FsaW5pdHkpOwogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDAsMjU1LDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiMTFbbV0iLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOlsuLi5BcnJheTxudW1iZXI+KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXh0cmFjdF9kYXRh44Gv6YWN5YiX44Gn44Gq44GP44CB5pW05pWw44Kt44O877yI5rC05rex77yJ44Gu6YCj5oOz6YWN5YiXCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyKGV4dHJhY3RfZGF0YVsxMV1baW5kZXhdLnNhbGluaXR5KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAicmdiYSgxMDAsMTAwLDEwMCwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICBvcHRpb25zOnsKICAgICAgICAgICAgICAgIHRpdGxlOnsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OnRydWUsCiAgICAgICAgICAgICAgICAgICAgdGV4dDoi5aGp5YiG6YePIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdWdnZXN0ZWRNYXg6IDQwLAogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdWdnZXN0ZWRNaW46IDI1LAogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdGVwU2l6ZTogNSwKICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgdmFsdWVzKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiAgdmFsdWUgKyAgJ20nOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgbGV0IGN0eDQ9PEhUTUxDYW52YXNFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ3YXRlcl90ZW1wIik7CiAgICAgICAgdGhpcy5XYXRlcl90ZW1wID0gbmV3IENoYXJ0KGN0eDQsIHsKICAgICAgICAgICAgdHlwZTonbGluZScsCiAgICAgICAgICAgIGRhdGE6ewogICAgICAgICAgICAgICAgbGFiZWxzOlsuLi5BcnJheShkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PmluZGV4KSwKICAgICAgICAgICAgICAgIGRhdGFzZXRzOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiIzW21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbM11baW5kZXhdLndhdGVyX3RlbXApOwogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2JhKDI1NSwwLDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoiNlttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzZdW2luZGV4XS53YXRlcl90ZW1wKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAicmdiYSgwLDAsMjU1LDEpIiwKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAicmdiYSgwLDAsMCwwKSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IjlbbV0iLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOlsuLi5BcnJheTxudW1iZXI+KGRhdGFfbGVuZ3RoKV0ubWFwKChfLGluZGV4KT0+ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXh0cmFjdF9kYXRh44Gv6YWN5YiX44Gn44Gq44GP44CB5pW05pWw44Kt44O877yI5rC05rex77yJ44Gu6YCj5oOz6YWN5YiXCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTnVtYmVyKGV4dHJhY3RfZGF0YVs5XVtpbmRleF0ud2F0ZXJfdGVtcCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMCwyNTUsMCwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiIxMVttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzExXVtpbmRleF0ud2F0ZXJfdGVtcCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMTAwLDEwMCwxMDAsMSkiLAogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgb3B0aW9uczp7CiAgICAgICAgICAgICAgICB0aXRsZTp7CiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTp0cnVlLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IuawtOa4qSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VnZ2VzdGVkTWF4OiA0MCwKICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3VnZ2VzdGVkTWluOiAtMTAsCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHN0ZXBTaXplOiA1LAogICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24odmFsdWUsIGluZGV4LCB2YWx1ZXMpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmV0dXJuICB2YWx1ZSArICAnbSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICBsZXQgY3R4NT08SFRNTENhbnZhc0VsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInR1cmJpZGl0eSIpOwogICAgICAgIHRoaXMuVHVyYmlkaXR5ID0gbmV3IENoYXJ0KGN0eDUsIHsKICAgICAgICAgICAgdHlwZTonbGluZScsCiAgICAgICAgICAgIGRhdGE6ewogICAgICAgICAgICAgICAgbGFiZWxzOlsuLi5BcnJheShkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PmluZGV4KSwKICAgICAgICAgICAgICAgIGRhdGFzZXRzOlsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiIzW21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbM11baW5kZXhdLnR1cmJpZGl0eSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMjU1LDAsMCwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiI2W21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbNl1baW5kZXhdLnR1cmJpZGl0eSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMCwwLDI1NSwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiI5W21dIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTpbLi4uQXJyYXk8bnVtYmVyPihkYXRhX2xlbmd0aCldLm1hcCgoXyxpbmRleCk9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGV4dHJhY3RfZGF0YeOBr+mFjeWIl+OBp+OBquOBj+OAgeaVtOaVsOOCreODvO+8iOawtOa3se+8ieOBrumAo+aDs+mFjeWIlwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE51bWJlcihleHRyYWN0X2RhdGFbOV1baW5kZXhdLnR1cmJpZGl0eSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMCwyNTUsMCwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiIxMVttXSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6Wy4uLkFycmF5PG51bWJlcj4oZGF0YV9sZW5ndGgpXS5tYXAoKF8saW5kZXgpPT57CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBleHRyYWN0X2RhdGHjga/phY3liJfjgafjgarjgY/jgIHmlbTmlbDjgq3jg7zvvIjmsLTmt7HvvInjga7pgKPmg7PphY3liJcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoZXh0cmFjdF9kYXRhWzExXVtpbmRleF0udHVyYmlkaXR5KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAicmdiYSgxMDAsMTAwLDEwMCwxKSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMCwwLDAsMCkiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICBvcHRpb25zOnsKICAgICAgICAgICAgICAgIHRpdGxlOnsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OnRydWUsCiAgICAgICAgICAgICAgICAgICAgdGV4dDoi5r+B5bqmIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdWdnZXN0ZWRNYXg6IDQwLAogICAgICAgICAgICAgICAgICAgICAgICAvLyBzdWdnZXN0ZWRNaW46IC0xMCwKICAgICAgICAgICAgICAgICAgICAgICAgLy8gc3RlcFNpemU6IDUsCiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIHZhbHVlcyl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gIHZhbHVlICsgICdtJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgfQp9Cgo="},{"version":3,"sources":["ChartTest.vue"],"names":[],"mappings":";AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartTest.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"wrapper\">\n            <div style=\"position: relative;width: 47%;\">\n                <canvas id=\"oxygen\">ここにあるよ</canvas>\n            </div>\n            <div style=\"position: relative;width: 47%;\">\n                <canvas id=\"chloro\">ここにあるよ</canvas>\n            </div>\n        </div>\n        <div class=\"wrapper\">\n            <div style=\"position: relative;width: 47%;\">\n                <canvas id=\"salinity\">ここにあるよ</canvas>\n            </div>\n            <div style=\"position: relative;width: 47%;\">\n                <canvas id=\"water_temp\">ここにあるよ</canvas>\n            </div>\n        </div>\n        <div class=\"wrapper\">\n            <div style=\"position: relative;width: 47%;\">\n                <canvas id=\"turbidity\">ここにあるよ</canvas>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Chart from 'chart.js';\nexport default class ChartTest extends Vue{\n    Oxygen:any;\n    Chloro:any;\n    Salinity:any;\n    Water_temp:any;\n    Turbidity:any;\n\n    plot_data(extract_data:{[key:number]:Array<any>}){\n        let ctx1=<HTMLCanvasElement>document.getElementById(\"oxygen\");\n        let data_length=extract_data[1].length;\n        this.Oxygen = new Chart(ctx1,{\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        //3,6,9,11\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].oxygen);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"酸素量\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 8,\n                        // suggestedMin: 5,\n                        // stepSize: 3,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n       })\n        let ctx2=<HTMLCanvasElement>document.getElementById(\"chloro\");\n        this.Chloro = new Chart(ctx2, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"クロロフィル\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 2,\n                        // suggestedMin: 0,\n                        // stepSize: 2,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx3=<HTMLCanvasElement>document.getElementById(\"salinity\");\n        this.Salinity = new Chart(ctx3, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].salinity);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,0,155,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].salinity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"塩分量\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: 25,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx4=<HTMLCanvasElement>document.getElementById(\"water_temp\");\n        this.Water_temp = new Chart(ctx4, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].water_temp);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].water_temp);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"水温\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx5=<HTMLCanvasElement>document.getElementById(\"turbidity\");\n        this.Turbidity = new Chart(ctx5, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].turbidity);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].turbidity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"濁度\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n    }\n}\n\n</script>\n\n<style lang=\"scss\">\n.wrapper{\n    display: flex;\n    justify-content: space-around;\n    canvas{\n        margin-bottom: 50px;\n    }\n}\n</style>"]}]}