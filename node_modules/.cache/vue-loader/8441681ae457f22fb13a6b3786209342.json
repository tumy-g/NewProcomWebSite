{"remainingRequest":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maizuru1/umilog_app/umilog_APPのコピー/src/components/ChartTest.vue?vue&type=style&index=0&id=1c020036&prod&lang=scss&scoped=true&","dependencies":[{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/src/components/ChartTest.vue","mtime":1694507470608},{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/css-loader/dist/cjs.js","mtime":1694229984043},{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1694229988110},{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/postcss-loader/src/index.js","mtime":1694229986702},{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/sass-loader/dist/cjs.js","mtime":1694229987489},{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/cache-loader/dist/cjs.js","mtime":1694229983493},{"path":"/Users/maizuru1/umilog_app/umilog_APPのコピー/node_modules/vue-loader/lib/index.js","mtime":1694229988110}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmRpdnsKICAgIC5ncmFwaHN7CiAgICAgICAgLmdyYXBoewogICAgICAgICAgICB3aWR0aDogODAlOwogICAgICAgICAgICBoZWlnaHQ6IDM1MHB4OwogICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsKICAgICAgICAgICAgQG1lZGlhICBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU5MHB4KSB7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgIGhlaWdodDogMzAwcHg7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jaGFydGpzLXJlbmRlci1tb25pdG9yewogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMzBweDsKICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7CiAgICAgICAgICAgICAgICBAbWVkaWEgIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTkwcHgpIHsKICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4OwogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgCiAgICB9Cn0KCg=="},{"version":3,"sources":["ChartTest.vue"],"names":[],"mappings":";AAg0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ChartTest.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <!-- 溶存酸素 -->\n        <div class=\"graphs\">\n            <div class=\"graph\">\n                <canvas id=\"oxygen\">ここにあるよ</canvas>\n            </div>\n            <div class=\"graph\">\n                <canvas id=\"oxygen_week\">ここにるよ</canvas>\n            </div>\n        <div class=\"graph\">\n            <canvas id=\"oxygen_month\">ここにるよ</canvas>\n        </div>\n        <!-- クロロフィル -->\n        <div class=\"graph\">\n            <canvas id=\"chloro\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"chloro_week\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"chloro_month\">ここにあるよ</canvas>\n        </div>\n        <!-- 塩分濃度 -->\n        <div class=\"graph\">\n            <canvas id=\"salinity\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"salinity_week\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"salinity_month\">ここにあるよ</canvas>\n        </div>\n        <!-- 水温 -->\n        <div class=\"graph\">\n            <canvas id=\"water_temp\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"water_temp_week\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"water_temp_month\">ここにあるよ</canvas>\n        </div>\n        <!-- 濁度 -->\n        <div class=\"graph\">\n            <canvas id=\"turbidity\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"turbidity_week\">ここにあるよ</canvas>\n        </div>\n        <div class=\"graph\">\n            <canvas id=\"turbidity_month\">ここにあるよ</canvas>\n        </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Chart from 'chart.js';\nexport default class ChartTest extends Vue{\n\n    //Chartオブジェクトはこれらに代入される\n    Oxygen:any;\n    Chloro:any;\n    Salinity:any;\n    Water_temp:any;\n    Turbidity:any;\n    Oxygen_week:any;\n    Chloro_week:any;\n    Salinity_week:any;\n    Water_temp_week:any;\n    Turbidity_week:any;\n    Oxygen_month:any;\n    Chloro_month:any;\n    Salinity_month:any;\n    Water_temp_month:any;\n    Turbidity_month:any;\n\n    show = true;\n    red = \"rgba(255,0,0,1)\";\n    blue = \"rgba(0,0,255,1)\";\n    green = \"rgba(0,255,0,1)\";\n    yellow =\"rgba(255,255,50,1)\";\n    gray = \"rgba(100,100,100,1)\";\n\n    AAA = [100,2,5,40,2,40,0];\n\n    toggle(){\n        this.show = false;\n        console.log(this.show);\n    }\n\n    scrollElement(name:string){\n        const target = <HTMLButtonElement>document.getElementById(name);\n        target.scrollIntoView({behavior: \"smooth\", block: \"center\"});\n    }\n\n    // 一日のデータの表示\n    async plot_day_data(extract_data:{[key:number]:Array<any>}){\n        let ctx1=<HTMLCanvasElement>document.getElementById(\"oxygen\");\n        let data_length=extract_data[1].length;\n        this.Oxygen = new Chart(ctx1,{\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"red\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].oxygen);\n                        }),\n                        borderColor: \"blue\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].oxygen);\n                        }),\n                        borderColor: \"yellow\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].oxygen);\n                        }),\n                        borderColor: \"gray\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"溶存酸素(%) 1日のグラフ\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value + \"時\";\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return  value;\n                            }\n                        }\n                    }]\n                }\n            }\n       })\n        let ctx2=<HTMLCanvasElement>document.getElementById(\"chloro\");\n        this.Chloro = new Chart(ctx2, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(255,255,50,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"クロロフィル(ppb) 1日のグラフ\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value + \"時\";\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 2,\n                        // suggestedMin: 0,\n                        // stepSize: 2,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx3=<HTMLCanvasElement>document.getElementById(\"salinity\");\n        this.Salinity = new Chart(ctx3, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].salinity);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].salinity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"塩分濃度(mS/cm) 1日のグラフ\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value + \"時\";\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: 25,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx4=<HTMLCanvasElement>document.getElementById(\"water_temp\");\n        this.Water_temp = new Chart(ctx4, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].water_temp);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].water_temp);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"水温(℃) 1日のグラフ\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value + \"時\";\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx5=<HTMLCanvasElement>document.getElementById(\"turbidity\");\n        this.Turbidity = new Chart(ctx5, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].turbidity);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].turbidity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"濁度(FTU)ホルマジン基準 1日のグラフ\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value + \"時\";\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n    }\n\n    // 1週間のデータの表示\n    async plot_week_data(extract_data:{[key:number]:Array<any>}, array:any){\n        let ctx1=<HTMLCanvasElement>document.getElementById(\"oxygen_week\");\n        let data_length=extract_data[1].length;\n        this.Oxygen_week = new Chart(ctx1, {\n            type:'line',\n            data:{\n                // labels:[...Array(data_length)].map((_,index)=>data_length - 1 - index),\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].oxygen);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"溶存酸素(%) 1週間分(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx2=<HTMLCanvasElement>document.getElementById(\"chloro_week\");\n        this.Chloro_week = new Chart(ctx2, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"クロロフィル(ppb) 1週間分(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx3=<HTMLCanvasElement>document.getElementById(\"salinity_week\");\n        this.Salinity_week = new Chart(ctx3, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].salinity);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].salinity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"塩分(mS/cm) 1週間分(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx4=<HTMLCanvasElement>document.getElementById(\"water_temp_week\");\n        this.Water_temp_week = new Chart(ctx4, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].water_temp);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].water_temp);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"水温(℃) 1週間分(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx5=<HTMLCanvasElement>document.getElementById(\"turbidity_week\");\n        this.Turbidity_week = new Chart(ctx5, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].turbidity);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].turbidity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"濁度(FTU)ホルマジン基準 1週間分(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n    }\n\n    // １ヶ月のデータ表示\n    async plot_month_data(extract_data:{[key:number]:Array<any>}, array:any){\n        let ctx1=<HTMLCanvasElement>document.getElementById(\"oxygen_month\");\n        let data_length=extract_data[1].length;\n        this.Oxygen_month = new Chart(ctx1, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].oxygen);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"溶存酸素(%) １ヶ月(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx2=<HTMLCanvasElement>document.getElementById(\"chloro_month\");\n        this.Chloro_month = new Chart(ctx2, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"クロロフィル(ppb) １ヶ月(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx3=<HTMLCanvasElement>document.getElementById(\"salinity_month\");\n        this.Salinity_month = new Chart(ctx3, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].salinity);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].salinity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"塩分(mS/cm) １ヶ月(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx4=<HTMLCanvasElement>document.getElementById(\"water_temp_month\");\n        this.Water_temp_month = new Chart(ctx4, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,0,255,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].water_temp);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].water_temp);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"水温(℃) １ヶ月(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx5=<HTMLCanvasElement>document.getElementById(\"turbidity_month\");\n        this.Turbidity_month = new Chart(ctx5, {\n            type:'line',\n            data:{\n                labels:array,\n                datasets:[\n                    {\n                        label:\"1[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[1][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"3[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[3][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,0,255,1))\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"6[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[6][index].turbidity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"9[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[9][index].turbidity);\n                        }),\n                        borderColor: \"rgba(255,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"11[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[11][index].turbidity);\n                        }),\n                        borderColor: \"rgba(100,100,100,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"濁度(FTU)ホルマジン基準 １ヶ月(12時)\",\n                    fontSize: 18,\n                },\n                maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        callback: function(value, index, values){\n                            return value;\n                        },\n                    },\n                }],\n                yAxes: [{\n                    ticks: {\n                        // suggestedMax: 40,\n                        // suggestedMin: -10,\n                        // stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\ndiv{\n    .graphs{\n        .graph{\n            width: 80%;\n            height: 350px;\n            margin: 0 auto;\n            @media  screen and (max-width: 590px) {\n                width: 100%;\n                height: 300px;\n                padding: 0;\n            }\n            .chartjs-render-monitor{\n                margin-top: 30px;\n                margin-bottom: 50px;\n                @media  screen and (max-width: 590px) {\n                    margin-top: 20px;\n                    margin-bottom: 30px;\n                }\n            }\n        }\n        \n    }\n}\n\n</style>"]}]}