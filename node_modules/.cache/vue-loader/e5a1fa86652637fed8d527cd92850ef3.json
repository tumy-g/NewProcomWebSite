{"remainingRequest":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maizuru1/amplify_audio_text/auto-text-recorder/src/views/Home.vue?vue&type=style&index=0&id=3343d19e&lang=scss&scoped=true&","dependencies":[{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/src/views/Home.vue","mtime":1687165450936},{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/css-loader/dist/cjs.js","mtime":1687158515692},{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1687158514056},{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/postcss-loader/src/index.js","mtime":1687158514512},{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/sass-loader/dist/cjs.js","mtime":1687158514209},{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/cache-loader/dist/cjs.js","mtime":1687158516021},{"path":"/Users/maizuru1/amplify_audio_text/auto-text-recorder/node_modules/vue-loader/lib/index.js","mtime":1687158514018}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhvbWUgewogIC5yZWNvZ25pdGlvbiB7CiAgICAucmVjb3JkZWQtdGV4dCB7CiAgICAgIHdpZHRoOiAzMDBweDsKICAgICAgaGVpZ2h0OiA3cmVtOwogICAgICBsaW5lLWhlaWdodDogMS41ZW07CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\" />\n    <div class=\"recognition\">\n      <button class=\"record-btn\" @click=\"record\">{{ recordBtnValue }}</button>\n      <div>\n        <textarea class=\"recorded-text\" v-model=\"recoredText\" />\n      </div>\n      <p id=\"test\">test text test</p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport HelloWorld from \"@/components/HelloWorld.vue\";\n\n@Component({\n  components: {\n    HelloWorld\n  }\n})\nexport default class Home extends Vue {\n  msg: string = \"こんちは！！\";\n  recognizing: boolean = false;\n  recognition: any = null;\n  recordBtnValue = \"Record Start!\";\n  recoredText: string = \"\";\n  recoredMiniText: string = \"\";\n\n  async created() {\n    const { webkitSpeechRecognition } = window as any;\n    const recognition = new webkitSpeechRecognition();\n    recognition.lang = \"ja-JP\";\n    recognition.continuous = true;\n    recognition.onresult = await this.recognize;\n    this.recognition = recognition;\n  }\n\n  protected record() {\n    if (this.recognizing) {\n      this.recognition.stop();\n      this.recordBtnValue = \"Record Start!\";\n    } else {\n      this.recognition.start();\n      this.recordBtnValue = \"Stop Record!\";\n    }\n    this.recognizing = !this.recognizing;\n  }\n\n  protected async recognize(e: SpeechRecognitionEvent) {\n    this.recoredText += `${e.results[e.results.length - 1][0].transcript}\\n`;\n    this.recoredMiniText  += `${e.results[e.results.length - 1][0].transcript}\\n`;\n\n    console.log(this.recoredText);\n    console.log(this.recoredMiniText);\n\n    // if(this.recognizing) {\n    //   if(this.recoredMiniText.includes('cm')){\n    //     this.recognition.stop();\n    //     this.recordBtnValue = \"Record Start!\";\n    //     this.recoredMiniText = \"\";\n    //     this.recognizing = false;\n    //   }\n    // }else{\n    //   console.log(\"Hey\");\n    //   this.recognition.start();\n    //   this.recordBtnValue = \"Stop Record!\";\n    //   this.recognizing = true;\n    // }\n\n    if(this.recoredMiniText.includes('cm')){\n      this.recognition.stop();\n      this.recordBtnValue = \"Record Start!\";\n      this.recoredMiniText = \"\";\n      console.log(\"Hey\");\n      await this.recognition.start();\n      this.recordBtnValue = \"Stop Record!\";\n      this.record();\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.home {\n  .recognition {\n    .recorded-text {\n      width: 300px;\n      height: 7rem;\n      line-height: 1.5em;\n    }\n  }\n}\n</style>\n"]}]}