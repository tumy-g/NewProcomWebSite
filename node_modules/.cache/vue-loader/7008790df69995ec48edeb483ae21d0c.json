{"remainingRequest":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maizuru1/umilog_app/umilog_APP/src/components/ChartTest.vue?vue&type=style&index=0&id=4be467f0&prod&lang=scss&","dependencies":[{"path":"/Users/maizuru1/umilog_app/umilog_APP/src/components/ChartTest.vue","mtime":1693880021300},{"path":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/css-loader/dist/cjs.js","mtime":1692338943000},{"path":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1692338943000},{"path":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/postcss-loader/src/index.js","mtime":1692338943000},{"path":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/sass-loader/dist/cjs.js","mtime":1692338943000},{"path":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/cache-loader/dist/cjs.js","mtime":1692338943000},{"path":"/Users/maizuru1/umilog_app/umilog_APP/node_modules/vue-loader/lib/index.js","mtime":1692338943000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci53cmFwcGVyewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwogICAgY2FudmFzewogICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7CiAgICB9Cn0K"},{"version":3,"sources":["ChartTest.vue"],"names":[],"mappings":";AAyNA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartTest.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"wrapper\">\n            <div style=\"position: relative;width: 45%;\">\n                <canvas id=\"oxygen\">ここにあるよ</canvas>\n            </div>\n            <div style=\"position: relative;width: 45%;\">\n                <canvas id=\"chloro\">ここにあるよ</canvas>\n            </div>\n        </div>\n        <div class=\"wrapper\">\n            <div style=\"position: relative;width: 45%;\">\n                <canvas id=\"salinity\">ここにあるよ</canvas>\n            </div>\n            <div style=\"position: relative;width: 45%;\">\n                <canvas id=\"water_temp\">ここにあるよ</canvas>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Chart from 'chart.js';\nexport default class ChartTest extends Vue{\n    plot_data(extract_data:{[key:number]:Array<any>}){\n        let ctx1=<HTMLCanvasElement>document.getElementById(\"oxygen\");\n        let data_length=extract_data[1].length;\n        let Oxygen = new Chart(ctx1,{\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"2[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[2][index].oxygen);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"10[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[10][index].oxygen);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"酸素量\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        suggestedMax: 8,\n                        suggestedMin: 5,\n                        stepSize: 3,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n       })\n        let ctx2=<HTMLCanvasElement>document.getElementById(\"chloro\");\n        let Chloro = new Chart(ctx2, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"2[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[2][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"10[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[10][index].chlorophyll);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"クロロフィル\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        suggestedMax: 2,\n                        suggestedMin: 0,\n                        stepSize: 2,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx3=<HTMLCanvasElement>document.getElementById(\"salinity\");\n        let salinity = new Chart(ctx3, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"2[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[2][index].salinity);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"10[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[10][index].salinity);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"塩分量\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        suggestedMax: 40,\n                        suggestedMin: 25,\n                        stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n        let ctx4=<HTMLCanvasElement>document.getElementById(\"water_temp\");\n        let water_temp = new Chart(ctx4, {\n            type:'line',\n            data:{\n                labels:[...Array(data_length)].map((_,index)=>index),\n                datasets:[\n                    {\n                        label:\"2[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[2][index].water_temp);\n                        }),\n                        borderColor: \"rgba(255,0,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    },\n                    {\n                        label:\"10[m]\",\n                        data:[...Array<number>(data_length)].map((_,index)=>{\n                            // extract_dataは配列でなく、整数キー（水深）の連想配列\n                            return Number(extract_data[10][index].water_temp);\n                        }),\n                        borderColor: \"rgba(0,255,0,1)\",\n                        backgroundColor: \"rgba(0,0,0,0)\"\n                    }\n                ]\n            },\n            options:{\n                title:{\n                    display:true,\n                    text:\"水温\"\n                },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        suggestedMax: 40,\n                        suggestedMin: 0,\n                        stepSize: 5,\n                        callback: function(value, index, values){\n                            return value;\n                            // return  value +  'm';\n                            }\n                        }\n                    }]\n                }\n            }\n        })\n    }\n}\n\n</script>\n\n<style lang=\"scss\">\n.wrapper{\n    display: flex;\n    justify-content: space-around;\n    canvas{\n        margin-bottom: 50px;\n    }\n}\n</style>"]}]}